name: Build Project

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:

  setup:
    runs-on: ubuntu-latest
    name: Maven Setup
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Setup Project
        run: mvn package install
      - name: Maven Information
        run: mvn dependency:tree

  build-16:
    needs: setup
    runs-on: ubuntu-latest
    name: Build Java 16
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 16
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
          cache: 'maven'
      - name: Build Project
        run: mvn clean install -pl "!1_18_R1,!1_18_R2,!1_19_R1"
  build:
    needs: setup
    strategy:
      matrix:
        java-version: [17, 18]

    runs-on: ubuntu-latest
    name: Build Java ${{ matrix.java-version }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: 'maven'
      - name: Build Project
        run: mvn clean install

  deploy:
    runs-on: ubuntu-latest
    needs: setup
    name: Deploy JavaDocs
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Extract Development
        id: project
        run: echo ::set-output name=dev::$(mvn help:evaluate -Dexpression=development -q -DforceStdout)

      - name: Build Project
        if: ${{ !steps.project.outputs.dev }}
        run: mvn package
          
      - name: Build JavaDocs
        if: ${{ !steps.project.outputs.dev }}
        run: bash javadoc.sh ${GITHUB_SHA::7}

  analyze:
    runs-on: ubuntu-latest
    needs: setup
    name: Analyze Project
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=GamerCoder215_MobChip

